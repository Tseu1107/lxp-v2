export const TRANSLATIONS_EN = {
  action: {
    addRow: 'Add row',
    edit: 'Edit',
    datatable_info: 'Showing _START_ to _END_ from _TOTAL_ results',
    delete: 'Delete',
    loading: 'Loading',
    view: 'View',
    publish: 'Publish',
    recalculate: 'Recalculate',
    recreate: 'Recreate',
    register: 'Register',
    search: 'Search...',
    setInactive: 'Set inactive',
    setActive: 'Set active',
    typeHere: 'Type here',
    post: 'Post',
    emptyTable: 'Not found',
    calculate: 'Calculate',
  },
  day: 'days',
  lessons: 'lessons',
  result: 'Result',
  not_registered: 'Not registered',
  addRole: 'Add a role',
  days: 'Days',
  not_published: 'Not published',
  unPublish: 'Set inactive',
  save_success: 'Successfully saved',
  success: 'Successfully',
  add: 'Add new',
  add_school_relation: 'Connect the school',
  add_student: 'Add student',
  all: 'All',
  amount: 'Amount',
  answered: 'Answered',
  answered_percent: 'Percent',
  undo: 'Undo',
  back: 'Back',
  back_to_list: 'Back to list',
  by_class: 'By class',
  by_student: 'By student',
  cancel: 'Cancel',
  please_add_template: 'Please add template',
  certificate: {
      title: 'Certificate',
      download: 'Download certificate'
  },
  datatable: {
      columns: 'Columns'
  },
  delete: 'Delete',
  ecourse: {
      createTopic: 'Add new topic',
      parentTopic: 'Parent topic',
      selectSubject: 'Select course subject',
      title: 'E-Learning',
      topic_code: 'Topic code',
      topic_name: 'Topic name',
      topic_activity: 'Хичээлийн үйл ажиллагаа',
      topic_description: 'Дүгнэлт',
      topics: "Topics"
  },
  elearning_topic: 'Topic',
  email: 'Email address',
  chat: {
      createNew: 'Write new chat',
      markAllAsRead: 'Mark all as "READ"',
      new: 'New chat',
      offline: 'Offline',
      online: 'Online',
      select_chat_description: 'Please select user to start messaging',
      sent_chat: 'sent image'
  },
  online_exam: {
      title: 'Online exam',
      search: 'Search',
      connect_answers: 'Connect answer',
  },
  student_info_missing: 'Student information missing',
  previous: 'Previous',
  online_exam_eq_answer: 'Please insert your answer',
  online_exam_text_answer: 'Please insert your answer text',
  online_exam_select_value: 'Please select values from search section located in left side then you can see question registered.',
  online_exam_edit_question: 'Edit question',
  online_exam_delete_question: 'Delete question',
  online_exam_delete_course: 'Delete',
  online_exam_edit_course: 'Edit',
  online_exam_back_to_list: 'Back to list',
  online_exam_subject: 'Subject',
  copy: 'Copy',
  show_report: 'Show report',
  download_report: 'Download report',
  online_exam_question: 'Insert question',
  online_exam_subTopic: 'Subtopic',
  online_exam_select_subTopic: 'Select subtopic',
  insert_only_photo: 'Please insert only photo.',
  remove_connected_answer: 'Please disconnect related answer.',
  select_right_answer: 'Please select right answer',
  insert_answer_photo: 'Please insert answer photo',
  incorrect: 'Incorrect',
  fill_general_info: 'Please fill general information',
  fill_answer_sheet: 'Please fill answer sheet',
  do_inactive: 'Inactive',
  score: 'Score',
  clear: 'Clear',
  question_type: 'Question type',
  question_difficulty: 'Question difficulty',
  select_subject: 'Select subject',
  select_topic: 'Select topic',
  select_question_difficulty: 'Select question difficulty',
  select_question_type: 'Select question type',
  select_connective_answer: 'Please select answer to connect.',
  general_info: 'General information',
  add_question: 'Add question',
  insert_eq_question: 'Please insert answer.',
  connect_answers: 'Connect answer',
  connect: 'Connect',
  detailed_info: 'Detailed information',
  answer: 'Answer',
  className: 'Class',
  code: 'Code',
  create: 'Create',
  show_result: 'Show result',
  photo: 'Photo',
  studentCode: 'Student code',
  studentLastName: 'Student lastname',
  studentFirstName: 'Student firstname',
  description: 'Description',
  insert_description: 'Insert description',
  create_question: 'Create question',
  course_subject: 'Subject',
  course_code: 'Course code',
  course_name: 'Course name',
  course_briefDescription: 'Brief description',
  course_result: 'Result',
  course_criteria: 'Criteria',
  course_select_teacher: 'Select teacher',
  course_select_topic: 'Select topic',
  course_add_topic: 'Add topic',
  course_type: 'Course Type',
  course_select_courseType: 'Select type',
  course_insert_course_code: 'Insert course code',
  course_insert_course_name: 'Insert course name',
  course_insert_text: 'Insert text',
  course_next: 'Next',
  course_confirm: 'Confirm',
  course_general_info: 'General info',
  course_lesson: 'Lesson',
  course_examination_question: 'Examination question',
  course_upload_video: 'Upload video',
  course_video_lesson: 'Video lesson',
  course_select_from_question_bank: 'Select from question bank',
  course_select_question: 'Select question',
  course_add_course: 'Add course',
  course_edit_course: 'Edit course',
  course_total_topic: 'Total topics',
  course_blueprint: 'Blueprint',
  course_course_name: 'Course name',
  course_not_created_user: 'No right to edit!',
  courseName: 'Course',
  planned_time: 'Planned hours',
  registered_time: 'Registered hours',
  cameStudent: 'Came',
  cameHours: 'Came hours',
  busDashboardTitle: 'Bus dashboard',
  config: 'Config',
  busConfig: 'Bus config',
  busDiscount: 'Bus discount',
  busInvoice: 'Bus invoices',
  busSale: 'Bus sale',
  search: 'Search...',
  send: 'Send',
  empty: 'No record was found',
  total: 'Total',
  date: 'Date',
  datePickerPlaceholder: 'Year-month-day',
  chooseSeason: 'Choose term',
  created_date: 'Created date',
  transaction_date: 'Transaction date',
  select_transaction_date: 'Select transaction date',
  check_transaction_date: 'Check transaction date',
  created_user: 'Created user',
  registered: 'Registered',
  close: 'Close',
  status: 'Status',
  view: 'View',
  phoneNumber: 'Phone number',
  insert_phoneNumber: 'Insert phone number',
  students: 'Students',
  last_name: 'Last name',
  first_name: 'First name',
  insert_last_name: 'Insert last name',
  insert_first_name: 'Insert first name',
  insert_price: 'Insert price',
  edit: 'Edit',
  approve: 'Approve',
  approve_confirmation: 'Are you sure?',
  delete_confirmation: 'Are you sure you want to delete it?',
  delete_confirmation_description: 'Please note that one deleted information will not be restored!',
  download_excel: 'Download excel',
  role: 'Role',
  select_role: 'Select role',
  school: 'School',
  school_code: 'School code',
  select: 'Select',
  pls_select: 'Select please',
  gender: 'Gender',
  select_gender: 'Select gender',
  yes: 'Yes',
  no: 'No',
  print: 'Print',
  receipt_print: 'Receipt print',
  teacher_title: 'Teacher',
  list: 'List',
  excel: 'Excel',
  period: 'Period',
  decline: 'Decline',
  grade: 'Grade',
  total_score: 'Total score',
  percent: 'Percent',
  to_take: 'To take',
  purpose: 'Purpose',
  result_list: 'Result list',
  total_taken_score: 'Total taken score',
  add_new: 'Add new',
  start_date: 'Start date',
  end_date: 'End date',
  name: 'Name',
  excel_download: 'Download as Excel',
  information: 'Information',
  unpaid_amount: 'Unpaid amount',
  insert_code: 'Insert code',
  insert_name: 'Insert name',
  insert_order: 'Insert order',
  insert_pay_amount: 'Insert amount',
  register_number: 'Registration number',
  created_by: 'Created by',
  main_information: 'Main information',
  disable: 'Disable',
  enable: 'Enable',
  change_login_name: 'Change login name',
  clear_login_name: 'Clear login name',
  clear_login_name_description: 'Would you like to clear login name?',
  clear_login_name_description_1: 'Нэвтрэх нэр хассан тохиолдолд тухайн нэвтрэх нэрийг ашиглан системд нэвтрэх боломжгүйг анхаарна уу',
  type: 'Type',
  insert_fields_correctly: 'Enter the data correctly',
  paid_amount: 'Paid amount',
  class_name: 'Class',
  confirmation: 'Confirmation',
  select_grade: 'Select grade',
  score_type: 'Score type',
  select_all: 'Select all',
  published: 'Published',
  subjects: 'Subjects',
  classes: 'Classes',
  saved: 'Saved',
  save_and_exit: 'Save and exit',
  bonus: 'Bonus',
  average: 'Average',
  max: 'Maximum',
  min: 'Minimum',
  start_time: 'Start time',
  end_time: 'End time',
  school_shift: 'Schedule',
  insert_photo: 'Insert photo',
  upload_photo_button_label: 'Click here to upload image',
  click_here: 'Click here...',
  crop: 'Crop',
  discounted_students: 'discounted of students',
  sequence: 'Sequence',
  insert_sequence: 'Insert sequence',
  address: 'Address',
  mongolia: 'Mongolia',
  english: 'English',
  website: 'Website',
  lat: 'Latitude',
  lon: 'Longitude',
  handDistance: 'Radius in metre',
  handDistanceMin: 'Minimum value must be 100 metres',
  logo: 'Logo',
  logo_horizontal: 'Horizontal logo',
  season: 'Term',
  gpa: 'GPA',
  checked: 'Checked',
  time: 'Time',
  change_time: 'Change time',
  by_day: 'By day',
  by_staff: 'By staff',
  by_dashboard: 'By dashboard',
  assessment: 'Assessment',
  template: 'Template',
  total_avg: 'Total average',
  valid: 'Valid',
  invalid: 'Invalid',
  remove: 'Remove',
  male: 'Male',
  female: 'Female',
  e_mail: 'E-Mail',
  existing_phone_number: 'Using mobile number',
  new_phone_number: 'New mobile number',
  re_enter_phone_number: 'Repeat new mobile number',
  re_open: 'Reopen',
  password: 'Password',
  new_password: 'New password',
  re_enter_new_password: 'Re-enter new password',
  readMore: 'Read more',
  password_empty: 'Insert password please',
  password_length_error: 'Password must have more than 4 characters',
  password_re_enter_mismatch: 'Password and confirmation password do not match.',
  phone_number_re_enter_mismatch: 'Phone number and confirmation phone number do not match.',
  insert_file: 'Insert file(s)',
  insert_video: 'Insert video',
  comment_receive: 'Whether to receive comments',
  enter_exam_score: 'Please enter exam scores',
  error_crop_button: 'Please select the image area, then press crop button.',
  excel_import: 'Excel import',
  active: 'Active',
  is_active: 'Active',
  inactive: 'Inactive',
  content_code: 'e-content code',
  insert_content_code: 'Insert e-content code',
  published_date: 'Published date',
  manage_roles: 'Manage roles',
  add_teacher_role: 'Add teacher role',
  class_date: 'Class date',
  change_password: 'Change password',
  change_password_description: 'Please note that after you change password, old password cannot be used.',
  change_login_name_description: 'Please note that after you change login name, old one will not work.',
  weight: 'Weight',
  height: 'Height',
  required: 'Required or not',
  remove_config: 'Remove config',
  remove_config_description: 'Would you like to remove student from app usage expiration?',
  meaning: 'Meaning',
  value: 'Value',
  insert_information: 'Insert information',
  attendance: {
      title: 'Attendance',
      attendance_registration: 'Attendance record',
      delete_description: 'Ирцийн мэдээг устгах гэж байна. Устгагдсан мэдээллийг сэргээх боломжгүйг анхаарна уу',
      sent_attendance: 'Send attendance',
      sent_attendance_confirm: 'Send attendance',
      sent_time: 'Sent at',
      season_config_title: 'Ирц бүртгэл - Улирлын тохиргоо',
      attendance_report: 'Attendance report',
      no_log_title: 'Ирц бүртгээгүй цаг',
      came: 'Came',
      excused: 'Excused',
      unexcused: 'Unexcused',
      sick: 'Sick',
      late: 'Late',
      not_sent: 'Not send attendance',
      is_request: 'Sorry, you can not change the status of request which was approved. Only you change a new request status.',
      checkable_description: 'Сурагчийн ирцийг сонгож илгээх',
      unable_to_delete: 'Улирлын дүн гарсан тул ирцийн мэдээг устгах боломжгүй',
      unable_to_log_date: 'Ирц бүртгэх боломжгүй өдөр байна',
  },
  class: {
      title: 'Class',
      girls: 'Girls',
      grade: 'Grade',
      boys: 'Boys',
      report: 'Class report',
      timetableEmpty: 'There is no timetable',
  },
  student: {
      create_user: 'Record e-mail',
      title: 'Student',
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      family_name: 'Family name',
      esis_qr: 'ESIS QR code',
      status: 'Status',
      student_status: 'Student status',
      current_class: 'Current class',
      gender: 'Gender',
      register_number: 'Registration number',
      birth_date: 'Birthday',
      entry_date: 'Entry date',
      insert_photo: 'Insert photo',
      book: 'Student book',
      book_title: 'Student\'s personal case',
      upload_button_label: 'Click here to upload image',
      homework_report: 'Student homework report',
      registration_undo: 'Recover student',
      relation: 'Parents',
      relation_type: 'Relation type',
      usage_time: 'Used time',
      last_login: 'Last sign in',
      student_information: 'Student’s information',
      relation_other: 'Other family members',
      change_password: 'Change student\'s password',
      health: 'Health indicators ',
      address_type: 'Permenant or not',
      birth_cert: 'Birth certificate number',
      health_num: 'Health number',
      phone_number: 'Student phone number',
      userRoleNotFound: 'Student user role has not been set on your school. Please contact admin'
  },
  studentBookNavs: {
      student_info: 'Student’s information',
      address: 'Address',
      contact: 'Contact',
      health: 'Health',
      relation: 'Relative',
      personal_info: 'Personal information',
      self_info: 'Personal information',
      student_personal_info: 'Student’s pesonal information',
      grade: 'Grade',
      mid_test: 'Midterm test',
      season_grade: 'End of term grades',
      teacher_statement: 'Teacher description',
      progress: 'Progress',
      punishment: 'Punishment',
      behavior: 'Behavior',
      behavior_status: 'Behavior status',
      attendance: 'attendance',
      tuition: 'Tuition fee',
      others: 'Others',
      bus: 'Bus',
      bus_title: 'Автобусаар зорчсон мэдээлэл',
      food: 'Food',
      food_title: 'Хоолонд орсон мэдээлэл',
      skill_status: 'Skill evaluation'
  },
  studentBook: {
      healthInsuranceNumber: 'Health ID',
      birthCertNumber: 'Birth ID',
      ethnicity: 'Nationality',
      date: 'Date',
      class_name: 'Class name',
      lesson: 'Lesson',
      rank: 'Rank',
      max_point: 'Maximum point',
      min_point: 'Minimum point',
      average: 'Average',
      season: 'Term',
      test_name: 'Test name',
      point_took: 'Your point',
      show: 'Show',
      relation: 'Your relation',
      parent_name: 'Parent name',
      name: 'Your name',
      birth_day: 'Birth date',
      gender: 'Gender',
      phone: 'Phone number',
      work_place: 'Work place',
      work_role: 'Position',
      live_with: 'Living together',
      reason: 'Reason for saperation',
      student_point: 'Student point',
      student_score: 'Student score',
      class_average: 'Class average',
      read_more: 'Read more',
      learn_more: 'Learn more',
      skill_status: 'Skill status',
      state: 'State',
      pay_date: 'Payment due',
      paid_date: 'Paid date',
      type: 'Type',
      payment_num: 'Invoice number',
      payment_type: 'Invoice type',
      pay: 'Payment amount',
      paid: 'Paid amount',
      paid_type: 'Paid type',
      remain: 'Remain',
      registered_date: 'Registered date',
      uploaded_date: 'Uploaded date',
      student_code: 'Student code',
      class: 'Class',
      e_barimt: 'E-Barimt',
      hours: 'Hours',
      attended_hours: 'Attendance',
      late_hours: 'Late',
      absent_hours: 'Absent',
      sick_hours: 'Sick',
      free_hours: 'Excused',
      teacher: 'Teacher',
      bus_service_info: 'Bus service information',
      food_service_info: 'Food service information',
      route: 'Route',
      driver: 'Driver',
      female: 'Female',
      male: 'Male',
      no_info: 'No information found',
      email: 'E-mail address',
      city: 'City',
      home_phone: 'Home phone',
      birth_place: 'Birthplace',
      door: 'Door number',
      town: 'Town',
      street: 'Street',
      building: 'Building',
      studying: 'Studying',
      graduated: 'Graduated',
      remaining: 'remaining',
      duration: 'Duration',
      reasonNotLivingTogether: 'Reason',
      place: 'Place',
      seasonScore: 'Term total score',
      activity: 'Activity, participation',
  },
  dashboardAttendence: {
      excelByTime: 'Attendance dashboard - By time',
      excelByClass: 'Attendance dashboard - By class',
      excelByTeacher: 'Attendance dashboard - By teacher',
      today: 'Today',
      week: 'This week',
      month: 'This month',
      primaryClass: 'Primary school',
      secondaryClass: 'Secondary school',
      highClass: 'Highschool',
      season: 'This term',
      attended: 'Came',
      absent: 'Unexcused',
      late: 'Late',
      sick: 'Sick',
      excused: 'Excused',
      student_hour: 'Student | hour',
      class_attendance: 'Class Attendance',
      attendance_info: 'Attendance',
      info_sent: 'Attendence information sent',
      hour: 'Hour',
      all_class_num: 'Number of classes',
      responded_class_num: 'Number of attendance record submission',
      students: 'Students',
      class: 'Class',
      class_name: 'Class name',
      with_class_name: 'Class name',
      with_class: 'Class',
      with_rank: 'Rank',
      picture: 'Picture',
      student_code: 'Student code',
      last_name: 'Parent name',
      student_name: 'Student name',
      lesson: 'Lesson',
      teacher: 'Teacher',
      response: 'Sent',
      response_time: 'Sent time',
      no_response: 'Not sent',
      info_sent_classes: ' of attendence information sent classes',
      all_student_hours: 'Students | hours',
      attended_student: 'Attended students',
      absent_student: 'Absent students',
      late_student: 'Late students',
      sick_student: 'Sick students',
      excused_student: 'Excused students',
      class_student: 'Students',
      all_club_num: 'Number of club',
      responded_club_num: 'Number of clubs sent attendance',
      club_name: 'Club name',
  },
  dashboardSeasonGrade: {
      with_subject: 'Subject',
      with_teacher: 'Teacher',
      with_class: 'Class',
      dashboard: 'Dashboard',
      dashboard_season: 'Term grade dashboard',
      teacher_dashboard: 'Teacher`s term grade dashboard',
      class_dashboard: 'Class`s term grade dashboard',
      dashboard_curr: 'Current grade dashboard',
      teacher_dashboard_curr: 'Teacher`s current grade dashboard',
      class_dashboard_curr: 'Class`s current grade dashboard',
      dashboard_year: 'Final score dashboard',
      teacher_dashboard_year: 'Teacher`s final score dashboard',
      class_dashboard_year: 'Class`s final score dashboard',
      total: 'Total',
      test: 'Test'
  },
  finance: {
      add_note: 'Add note',
      invoice: 'Invoice',
      invoice_empty: 'No invoices has found',
      invoice_search: 'Search invoice',
      select_all_student: 'All student',
      select_invoice_type: 'Please, select invoice type',
      total_student: 'Total students',
      number_of_incomplete_students: 'Number of incomplete students',
      dashboard: 'Dashboard',
      ebarimt: 'E-barimt',
      ebarimt_created_date: 'E-barimt created date',
      ebarimt_lottery: 'E-barimt lottery number',
      ebarimt_lottery_insert: 'Insert E-barimt lottery number',
      ebarimt_register: 'Register e-barimt',
      ebarimt_register_error: 'Error has occured while registering ebarimt lottery',
      ebarimt_type: 'E-barimt type',
      ebarimt_type_insert: 'Select E-barimt type',
      ebarimt_type_citizen: 'Citizen',
      ebarimt_type_organization: 'Organization',
      ebarimt_type_organization_register: 'Registration number of organization',
      ebarimt_type_organization_register_insert: 'Insert Registration number of organization',
      tuition_payment: 'Payment',
      billed: 'Invoice amount',
      paid: 'Paid',
      unpaid: 'Unpaid',
      incomplete: 'Incomplete',
      invoice_payment_title: 'payment',
      read_more: 'Read more',
      overpaid: 'Overpaid',
      className: 'Class',
      discount_amount: 'Discounted amount',
      duedate_amount_error: 'Amount is not matching',
      pay_amount: 'Amount',
      unpaid_amount: 'Unpaid amount',
      contact: 'Contact',
      amount: 'Amount',
      pay: 'Pay',
      invalid: 'Invalid',
      disable: 'Disable',
      view: 'View',
      create_invoice_type: 'Create invoice type',
      please_create_invoice_type: 'Create invoice type',
      select_class: 'Select class',
      fixed_amount: 'Constant amount',
      custom_amount: 'Inconstant amount',
      create_invoice: 'Create invoice',
      re_create: 'Create a re-invoice',
      edit_invoice: 'Edit invoice',
      invoice_type: 'Invoice type',
      invoice_type_is_default: 'Does it belong to the school?',
      invoice_type_vat_payer: 'VAT bill enabled?',
      invoice_type_vat_code: 'Service code',
      invoice_type_vat_code_description: 'Service code of VAT',
      due_date: 'Due date',
      due_date_expired: 'Due date expired',
      due_date_upcoming: 'Upcoming due dates',
      insert_due_date: 'Insert due date',
      class: 'Class',
      bank: 'Bank name',
      select_bank: 'Select bank',
      account_number: 'Account number',
      account_holder: 'Account name',
      select_all_students: 'Select all students',
      disable_invoice_title: 'Are you sure you want to disable the invoice?',
      disable_invoice_description: 'Please note that it will not possible to pay the disabled invoice.',
      note: 'Note',
      overPaymentDescription: "Would you like to submit over payment?",
      paid_date: 'Paid date',
      paid_method: 'Paid method',
      discount: 'Discount',
      payment_graph: 'Payment graph',
      payment_history: 'Payment history',
      payment_information: 'Payment information',
      invoice_number: 'Invoice number',
      invoice_name: 'Invoice name',
      created_date: 'Created date',
      created_user: 'Created user',
      paid_amount: 'Paid amount',
      delete_invoice_type_description: 'Are you sure to delete the invoice type. Please note that once you deleted you cannot undo.',
      edit_invoice_type: 'Edit invoice type',
      total_amount: 'Total amount',
      total_payment: 'Total payment',
      discount_type: 'Discount type',
      discount_information: 'Discount information',
      please_insert_discount_amount: 'Insert discount amount',
      add_discount_type: 'Add discount type',
      discount_percent: 'Discounted percent',
      by_percent: 'By percentage',
      by_amount: 'By amount',
      discount_code: 'Discount code',
      discount_name: 'Discount name',
      edit_discount_type: 'Edit discount type',
      delete_discount_type_description: 'Are you sure to delete the discount. Please note that once you deleted you cannot undo.',
      pay_graph: 'Payment graph',
      add_discount: 'Add discount',
      amount_not_constant: 'Amount is not constant',
      undo: 'Undo',
      pay_amount_less_error: 'Amount is less than total invoice amount',
      pay_amount_more_error: 'Amount is greater than total invoice amount',
      due_date_amount_more_error: 'Amount is not matching duedate amount',
      due_date_check_error: 'Please select more than one due date because amount is not matching duedate amount',
      pay_amount_error: 'Amount can not be less than 0',
      left_amount: 'Unpaid amount',
      payments_graph: 'Payments graph',
      billed_amount: 'Billed amount',
      cash_back: 'Cash back',
      cash_back_description: 'Are you sure you want to delete the record? Note that once deleted, it cannot be restored.',
      already_day: 'The day has already chosen.',
      charge: 'Charge',
      currency: 'Currency',
      role_expire: 'Expire role',
      statement_rows: 'Row count',
      statement_connected: 'Connected statements with invoices',
      statement_invoices: 'Connected invoices',
      statement_not_connected: 'Not connected statements',
      statement_connect_to_invoice: 'Connect to invoice',
      statement_amount_error: 'Paid amount must be equal with invoice payment amounts',
      view_other_invoices: 'View other invoices of student'
  },
  financeIncomesTrans: {
      title: 'Income',
      cash: 'Cash',
      bank_statement: 'Bank statement',
      receipt_id: 'Receipt №',
      receipt_number: 'Receipt number',
      invoice_id: 'Invoice №',
      invoice_number: 'Invoice number',
      create_cash: 'Create cash',
      amount: 'Amount',
      insert_amount: 'Insert amount',
      cash_receipt: 'Cash receipt',
      cash_receiver: 'Cash receiver',
      cash_payer: 'Cash payer',
      cash_description: 'Cash description',
      cash_paid_amount: 'Cash paid amount',
      cash_paid_amount_letter: 'Cash paid amount letter',
      cash_received: 'Cash received',
  },
  foodDashboardTitle: 'Food dashboard',
  foodConfig: 'Food config',
  foodDiscount: 'Food discount',
  foodDiscountUndo: 'Undo the discount',
  foodDiscountUndoDescription: 'Are you sure to undo the discount?',
  foodInvoice: 'Food invoices',
  foodInvoiceCreate: 'Create invoice',
  foodSale: 'Food sale',
  foodAddCategory: 'Add food category',
  foodEditCategory: 'Edit food category',
  foodShopProductName: 'Product name',
  foodShopProductCode: 'Product code',
  foodShopProductPrice: 'Price',
  insertFoodQuantity: 'Insert quantity',
  isInactive: 'Is inactive',
  shop: 'Shop',
  totalProduct: 'Amounts',
  competence: {
      title: 'Competence',
      add_file: 'Add file',
      edit_file: 'Edit file',
      select_file: 'Select file',
      file_list: 'File list',
      file_name: 'File Name',
      file: 'File',
      exam_material: 'Exam material',
      connected_type: 'Connected type',
      show_material: 'Show material',
      connected_by: 'Connected manually',
      auto_connected: 'Connected automaticly',
      not_connected: 'Haven`t connected',
      other_schools: 'School exam material',
      view_by_class: 'View by class',
      view_by_student: 'View by student'
  },
  blueprint: {
      title: 'Blueprint'
  },
  link: {
      title: 'Online lesson',
      add_link: 'Add link',
      insert_link: 'Insert link',
      link: 'Link',
      error_link: 'Not match URL',
  },
  financeSearch: {
      title: 'Search'
  },
  financeSearchStudentPortfolio: {
      status: 'Status',
      invoice_name: 'Invoice name',
      billed: 'Invoice amount',
      paid: 'Paid',
      incomplete: 'Incomplete',
      created_date: 'Created date',
      created_user: 'Created user',
      male: 'Male',
      female: 'Female',
      family_name: 'Family name',
      last_name: 'Last name',
      first_name: 'First name',
      birth_date: 'Birthday',
      gender: 'Gender',
      registerNumber: 'Registration number',
      entry_date: 'Entry date',
      current_class_name: 'Current class name',
      finance: 'Finance',
      food: 'Food',
      bus: 'Bus',
  },
  food: {
      add: 'Add',
      add_new: 'Add new',
      pay_amount: 'Amount',
      inactive: 'Inactive',
      active: 'Active',
      create_invoice_type: 'Create invoice type',
      edit_invoice_type: 'Edit invoice type',
      name: 'Name',
      insert_name: 'Insert name',
      bank: 'Bank',
      choose_bank: 'Choose bank',
      type: 'Type',
      choose_type: 'Choose tye',
      amount: 'Amount',
      insert_amount: 'Insert amount',
      check_time_config: 'Sale dates configuration?',
      valid_date: 'Valid date',
      inactive_invoice_type: 'Inactive invoice type',
      show: 'Show',
      paidAmount: 'Paid amount',
      inactiveSelectedInvoice: 'Inactive the selected invoice',
      correctDataError: 'Please correct the date',
      insertInvoiceTypeName: 'Insert invoice type name',
      pleaseSelectInvoice: 'Please select an invoice',
      sale_quantity: 'Sale quantity',
      teacher_staff: 'Teacher, staff',
      recordDiscount: 'Record discount',
      choose_class: 'Choose class',
      select_student: 'Select student',
      discountAmount: 'Discount amount',
      selectUser: 'Select user',
      insertAmount: 'Insert amount',
      insertTeacher: 'Insert teacher, staff',
      paid_method: 'Paid method',
      paid_date: 'Paid date',
      used_date: 'Used date',
      used_amount: 'Used amount',
      remaining: 'Remaining',
      quantity: 'Quantity',
      start_date: 'Start Date',
      end_date: 'End date',
      paid_history: 'Payment history',
      discount: 'Discount',
      history: 'History',
      no_information: 'No information available!',
      studentFinance: 'Student financial information',
      delete: 'Delete',
      edit_chef: 'Edit chef information',
      food_price_edit: 'Food price edit',
      chef: 'Chef',
      add_chef: 'Add chef',
      food_type_name: 'Food type name',
      price: 'Price',
      food_price: 'Food price',
      create_menu: 'Create menu',
      food_menu: 'Food menu',
      food_name: 'Food name',
      insert_food_name: 'Insert food name',
      user_role: 'User role',
      max_loan: 'Max loan',
      loan_settings: 'Loan settings',
      maximum: 'maximum',
      image_size_error: 'The image is too large to upload and needs to be resize please. Image max size 1mb.',
      image_type_error: 'Uploaded file is not a valid image. Only JPG, PNG and GIF files are allowed.',
      item_type_has_repeatable: 'Can use multiple daily',
      item_type_has_schedule: 'Has schedule',
      start_time: 'Start time',
      end_time: 'End time',
      select_item_type: 'Select food item type',
      by_day: 'By day',
      by_product: 'By product',
      product_quantity: 'Quantity',
      add_another_item: 'Add another item',
      description: 'Food description'
  },
  foodInvoiceCreate: 'Food invoice create',
  foodDashboard: {
      className: 'Class',
      totalStudents: 'Students',
      cameStudent: 'Came',
      students_with_sale: 'have to',
      students_food_used: 'had lunch',
      students_food_used_loan: 'loan',
      students_food_not_used: 'not had lunch',
      eater: 'Had lunch',
      loan_eat: 'Lunch for loan',
      payment: 'Payment',
      select_school_shift: 'Select schedule',
      select_time: 'Select time',
      by_class: 'By class',
      by_class_title: 'By class',
      by_student: 'By student',
      paid: 'Paid',
      incomplete: 'Incomplete',
  },
  foodDashboardModal: {
      status: 'Status',
      student_code: 'Student code',
      lastname: 'Last name',
      firstname: 'First name',
  },
  foodDashboardFoodUsedStudent: {
      status: '',
      used_date: 'Used date',
      created_date: 'Created date',
      created_user: 'Created user',
      class_name: 'Class',
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      sale_status: 'Status',
  },
  groupDashboard: {
      attendance: 'Club attendance',
      attendanceReport: 'Time report',
      title: 'Club dashboard',
      teachers: 'Teachers',
      code: 'Code',
      lastName: 'Last name',
      firstName: 'First name',
      groupName: 'Group/Club',
      totalStudents: 'Students',
      perWeek: 'Per week',
      className: 'Class',
      totalStudentsNumber: 'Number of students that involved in club',
      clubCount: 'Club',
      sportCount: 'Sport',
      students: 'Students',
      leftStudentCount: 'Left students',
      timetableCount: 'Number of hours in week'
  },
  groupDashboardModal: {
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      numbers: 'Numbers',
      clubs: 'Clubs',
      sports: 'Sports',
  },
  home: 'Home',
  invalid_date: 'Invalid date',
  roles: {
      admin: "Admin",
      parent: "Parents",
      teachers_staffs: "Teachers & staffs",
      title: 'Roles',
  },
  sale: {
      action_username: 'Username',
      charge: 'Charge',
      create: 'Create sale',
      currentBalance: 'Current balance',
      inactiveContent: 'Would you like to disable sale?',
      inactiveTitle: 'Disable sale',
      loan: 'Loan',
      loanCharge: 'Loan & charge',
      logHistory: 'Sale status history',
      recover: 'Recover sale',
      payment: 'Payment',
      sale_not_found: 'Sale not found',
      title: 'Student sale',
      type: 'Item type',
      usedDate: 'Used date',
      usedFoodDate: 'Хоолонд орсон огноо'
  },
  save: 'Save',
  survey: {
      edit: 'Edit survey',
      title: 'Survey',
      main_information: 'Main information',
      questions: 'Questions',
      question_description: 'Question description',
      confirmation: 'Confirmation',
      next: 'Next',
      survey_code: 'Survey code',
      survey_name: 'Survey name',
      insert_code: 'Insert code',
      insert_name: 'Insert name',
      survey_class: 'Classes to take survey',
      choose: 'Choose',
      start_date: 'Start date/time',
      select_time: 'Select time',
      end_date: 'End date/time',
      category: 'Category',
      survey_purpose: 'Purpose of survey',
      start: 'Start',
      end: 'End',
      classes: 'Classes',
      add_survey_category: 'Add survey category',
      parent_category: 'Translate',
      delete_survey_category: 'Delete survey category',
      edit_survey_category: 'Edit survey category',
      survey_date: 'Survey date',
      add_question: 'Add question',
      answers: 'Answers',
      question_type: 'Question type',
      answer_required: 'Require answer',
      allow_multiple_answers: 'Allow multiple answers',
      insert_question: 'Insert question',
      insert_question_description: 'Insert question description',
      insert_answer: 'Insert answer',
      add_more_question: 'Add more question',
      change_order: 'Change order',
      delete_question: 'Delete question',
      select_question_type: 'Select question type',
      delete_survey: 'Delete survey',
      disable_survey: 'Inactivate survey',
      disable_survey_confirmation: 'Are you sure to inactivate?',
      disable_survey_confirmation_description: 'Please note that you can\'t see the inactivated survey result',
      select_category: 'Select category',
      survey_classes: 'Classes',
      category_not_found: 'Category not found',
      edit_questions: 'Edit questions',
      excel_by_students: 'Excel by students',
  },
  foodDashboardFinanceModalStudents: {
      status: 'status',
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      amount: 'Amount',
      unpaid_amount: 'Unpaid amount',
      paid_amount: 'Paid amount',
      contactParent: 'Contact us',
  },
  busDashboard: {
      in_count: 'in count',
      out_count: 'out count',
      today: 'Today',
      week: 'Week',
      payment: 'Payment',
      route_info: 'Route information',
      passengers_information: 'Passengers information',
      total_student_by_bus: 'Total student information by bus',
      route: 'Route',
      search_by_code: 'Search by student code',
      select_route: 'Select route',
      select_class: 'Select class',
      select_student: 'Select student',
      total_students: 'Total students',
      incomplete_students: 'Incomplete students',
      overPayment: 'Overpayment',
      by_route: 'By routes',
      by_student: 'By students',
      active: 'Active',
      loan: 'Loan',
      loan_config: 'Loan config',
      no_sale: 'Not registered',
      map: 'Map',
      price: 'Price'
  },
  busDashboardToday: {
      name: 'Route name',
      in_count: 'Used students',
      incomplete_students: 'Incomplete students',
      loan_students: 'By loan',
  },
  busDashboardTodayModal: {
      status: 'Status',
      class_name: 'Class',
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      in: 'In',
      out: 'Out',
      registered_driver: 'Registered by',
      route_direction: 'Route',
  },
  busDashboardWeekDirectionStudents: {
      used_date: 'Used date',
      driver_name: 'Driver',
      status_sit: '',
      direction: 'Stop',
      class_name: 'Class',
      student_code: 'Student code',
      last_name: 'Last name',
      first_name: 'First name',
      unknown: 'Status 1',
      unknown1: 'Status 2',
  },
  busDashboardWeekStudents: {
      add: 'Add bus',
      used_date: 'Used date',
      status_sit: '',
      direction: 'Stop',
      station: 'Station',
      driver_name: 'Driver',
      insert_driver_name: 'Insert driver',
      route: 'Route',
      route_number: 'Route number',
      route_name: 'Route name',
      insert_route_number: 'Insert route number',
      insert_route_name: 'Insert route name',
      stop_count: 'Bus stop number',
      checker: '',
      add_driver: 'Add driver',
      edit_driver: 'Edit a driver information',
      remove_driver: 'Delete driver',
      remove_driver_title: 'Are you sure you want to delete the driver?',
      number: 'Bus number',
      insert_number: 'Insert bus number',
      add_route: 'Add route',
      edit_route: 'Edit route',
      delete_bus: 'Delete bus',
      delete_route: 'Delete route',
      delete_bus_title: 'Are you sure you want to delete the bus?',
      delete_route_title: 'Are you sure you want to delete the route?'
  },
  busNoSale: {
      title: 'No sale students',
      used_quantity: 'Quantity',
      created_loan: 'Create loan',
      no_sale: 'No sale students',
      total_amount: 'Total amount',
  },
  filesDt: {
      subject: 'Subject',
      file: 'File',
      file_limit: 'Must be less than 25MB',
      image_type_error: 'Uploaded file is not a valid file type. Only /png, x-png, jpg, jpeg, gif, docx, xlsx, pptx, wmv, mp4, mp3, mpeg/ files are allowed.',
      image_type_video_error: 'Uploaded file is not a valid file type. Only /mp4, mpeg, avi, mov, wmv/ files are allowed.',
      file_limit_with_video: 'Please note that the file size should not exceed 25mb and the video file size should not exceed 50mb.',
      created_date: 'Created date',
      created_user: 'Created user',
      delete_button: 'Delete',
  },
  timetable: {
      room: 'Room',
      add_subject: 'Add subject',
      choose_day: 'Please, select day',
      select_class: 'Select class',
      select_students: 'Select students',
      select_subject: 'Select subject',
      title: 'Timetable',
      club_title: 'Club timetable',
      subject: 'Subject',
      teacher: 'Teacher',
      score_weight: 'Weight',
      get_previous_season_data: 'Import timetables from previous term',
      monday: 'Monday',
      tuesday: 'Tuesday',
      wednesday: 'Wednesday',
      thursday: 'Thursday',
      friday: 'Friday',
      add: 'Add timetable',
      day: 'Day',
      time: 'Time',
      edit: 'Edit Timetable',
      class_all_students: 'All students of class:',
      group_student: 'Group student',
      day_not_empty: 'Timetable had already registered on chosen day. Please edit on date to make changes',
      time_not_empty: 'Time had already registered on chosen day',
      empty_timetable: 'You have no timetable. You should visit "Timetable" menu and then insert your timetable.',
      check_group_info: 'Group information is incomplete',
      class_student: 'Class student',
      download_last_season_timetable: 'Download timetables from previous term',
      select_day: 'Select day!',
      empty: 'Timetable is not created',
  },
  homework: {
      assigned: 'Homework assign',
      assign_date: 'Assign date',
      checked_date: 'Checked date',
      checked: 'Homework check',
      checkedHomework: 'Checked HW',
      title: 'Homework',
      totalHomework: 'total homework',
      date_description: 'Assignment marking date',
      delete_homework_info: 'Delete information',
      delete_homework: 'Would you like to delete homework?',
      delete_homework_description: 'Please note that all related contents will be unable to recover after deleting homework.',
      delete_student_homework: 'Delete student homework data',
      delete_student_homework_description: 'Please note that it is not possible to restore the deleted information.',
      score: 'Score',
      file: 'File',
      file_loading: 'Loading files',
      insert_file: 'Insert file(s)',
      select_file: 'Select file(s)',
      no_file: 'No file(s) is attached',
      not_found: 'Homework has not assigned yet',
      file_warning_message: 'If score is changed, student score will be re-calculated!!!',
      homework_assigned_already: 'Homework had already assigned on chosen date',
      homework_check: 'Homework check',
      homework: 'Homework',
      homework_due_date: 'Homework due date',
      homework_due_date_error: 'The date of homework which is being checked has to be today or in the past. Please check your date.',
      homework_sent: 'Sent',
      toDo: 'To do',
      complete: 'Complete',
      incomplete: 'Incomplete',
      homework_not_sent: 'Not sent',
      score_higher_that_max_score: 'score is higher than maximum score',
      score_lower_that_max_score: 'score is lower than maximum score',
      empty_score: 'score is empty, please insert score',
      please_select_status: 'Please select the status of homework',
      done: 'Done',
      not_done: 'Didn`t do',
      not_checked: 'Haven`t checked',
      total_score_error: 'Score is higher than total score.',
  },
  homeworkReport: {
      title: 'Homework report',
      class_club: 'Class / Club',
      subject: 'Subject',
      season: 'Term',
      homework: 'Homework',
      notChecked: 'Not checked',
      notCheckedShortName: 'NC',
      insert_class_club: 'select Class / Club',
      insert_subject: 'select subject',
      insert_season: 'select term',
      insert_score: 'Insert score',
      score: 'Score',
      takenScore: 'Taken score'
  },
  homeworkDashboard: {
      title: 'Homework',
      seasonText: 'Term',
      dateText: 'Date',
      showText: 'SHOW',
      errorFields: 'Please select the following fields !!!',
      by_class: 'By class',
      by_subject: 'By subject',
      by_teacher: 'By teacher',
  },
  homeworkDashboardDtClass: {
      class_name: 'Class',
      total: 'Total'
  },
  homeworkDashboardDtClassModal: {
      due_date: 'Due date',
      subject_name: 'Subject',
      first_name: 'Teacher',
      complete: 'complete',
      incomplete: 'incomplete',
      no_assignment: 'no_assignment',
  },
  homeworkDashboardDtTeacherModal: {
      due_date: 'Due date',
      subject_name: 'Subject',
      class_name: 'Class',
      complete: 'complete',
      incomplete: 'incomplete',
      no_assignment: 'no_assignment',
  },
  nfc: {
      title: 'NFC records'
  },
  notification: {
      unreadNotification: 'There is an unread [number] notification',
      readAll: 'Make all read'
  },
  teacher: {
      add_teacher: 'Add teacher',
      timeTableCount: 'Timetable count',
      title: 'Teacher',
      working: 'Active',
      not_working: 'Dismissed',
      add: 'Add',
      examGroupCount: 'Result group count',
      photo: 'Photo',
      lastname: 'Last name',
      name: 'First name',
      phone_number: 'Phone number',
      code: 'Teacher code',
      subjects: 'Subject',
      subjectCount: 'Subject count',
      teacher_class: 'Classroom',
      list: 'Teachers',
      login_name: 'Login name',
      current_login_name: 'Current login name',
      new_login_name: 'New login name',
      new_login_name_repeat: 'Please type new login name again',
      new_lastname: 'Last name',
      new_lastname_placeholder: 'Type your last name',
      new_name: 'Name',
      new_name_placeholder: 'Type your first name',
      note: 'Teacher notes',
      insert_phone_number: 'Enter your mobile number',
      insert_teacher_code: 'Enter teacher code',
      insert_teacher_title: 'Enter teacher title',
      teacher_title: 'Teacher title',
      role: 'Role',
      select_role: 'Select role',
      view: 'View',
      info_add: 'Teacher information add',
      insert_info: 'Insert teacher information',
      teacher_info: 'Teacher information',
      excuse: 'Dismiss teacher',
      excuseStaff: 'Dismiss employee',
      gender: 'Gender',
      select_gender: 'Select gender',
      select_school: 'Select school',
      role_teacher: 'Teacher',
      role_director: 'Direction',
      role_staff: 'Staff',
      role_school_staff: 'School(s) staff',
      role_manager: 'Manager',
      role_lead_teacher: 'Lead teacher',
      change_photo: 'Change photo',
      set_teacher: 'Undo',
      set_staff: 'Change status',
      change_status: 'Change status',
      change_status_staff: 'Change status',
      set_teacher_button_label: 'UNDO',
      edit: 'Edit',
      select_school_grade: 'Select school grade',
      change_phone_number_description: 'Please note that the mobile number now using can\'t be used again after you change the mobile number.',
      change_login_name_description: 'Please note that after you changed login name, before login name will not work.',
      change_login_name_description_staff: 'Please note that after you changed login name, before login name will not work.',
      change_phone_number: 'Change the mobile number of a teacher',
      change_login_name: 'Change the login name',
      change_login_name_staff: 'Change the login name',
      change_password: 'Change password',
      change_password_staff: 'Change password',
      change_password_description: 'Please note that after you change your teacher\'s password, the teacher will not be able to log in with the old password',
      change_password_description_staff: 'Please note that after you change your user\'s password, the user will not be able to log in with the old password!',
      manage_roles: 'Change user role',
      staff_code: 'Staff code',
      staff_card_title: 'Teacher, staff card',
      journal: 'Journal',
      journalNoteEmpty: 'Please select timetable to submit note',
      journalExcelTemplate: 'Download template',
      hw: 'Hw',
      classThatWillTakeExam: 'Class',
      onlineLesson: {
          title: 'Online lesson',
          createCourse: 'Create course',
          createNewCourse: 'Create new course',
          lesson: 'Lesson',
          group: 'Subject groups',
          collaboratingTeacher: 'Collaborating teacher',
          activityName: 'Activity name',
          enrollStudents: 'Enroll students',
          inCourse: 'Currently in course',
          toCourse: 'Jump to course',
          editCourse: 'Edit course',
          courseUrl: 'Course URL',
          changeLink: 'Change link',
          userCode: 'User code',
          canEdit: 'Can edit',
          addUser: 'Add user',
          notFound: 'Online lesson not found',
          purpose: 'Purpose',
          conclusion: 'Conclusion',
          learningObjectives: 'Learning objectives',
      }
  },
  group: {
      addClass: 'Add class',
      addStudent: 'Add student',
      approveStudents: 'Approve students',
      title: 'Group',
      type: 'Type',
      class_teacher_title: 'Class teacher',
      student_count: 'Number of students',
      score_type: 'Score type',
      classroom: 'Classroom',
      school_shift: 'Schedule',
      grade: 'Grade',
      select_grade: 'Select grade',
      code: 'Class code',
      class_teacher: 'Class teacher',
      list: 'List',
      edit: 'Edit',
      year: 'Year',
      name: 'Class',
      calendar: 'Class calendar',
      teacher_list: 'Teacher list',
      group_not_found: 'Group information not found',
      addAgain: 'Create again',
  },
  subject: {
      index: 'Index',
      credit: 'Credit',
      name: 'Subject name',
      code: 'Subject code',
      teacher: 'Subject teacher',
      subject_class: 'Class',
      title: 'Subject',
      type: 'Type',
      insert_index: 'Enter subject index',
      insert_name: 'Enter subject name',
      insert_teacher: 'Enter teacher',
      list: 'Subjects list',
      subject_type: 'Subject type',
      grade: 'Grade',
      close_button_label: 'CLOSE',
      edit: 'Edit subject',
      insert_credit: 'Enter credit',
      select_subject_type: 'Select subject type',
      select_teacher: 'Select teacher',
      isAll: 'Only for class all students',
      isResult: 'To calculate the grades',
      courseActivities: 'Course activities'
  },
  student_card: {
      title: 'Student card',
      create: 'Create a student card',
      grade: 'Grade',
      class_title: 'Class',
      select_all_students: 'Select all students',
      close_button_label: 'CLOSE',
      order: 'Order card',
      print: 'Print student card(s)',
      card_recreate: 'Inactive student card and create new student card?',
      recreate: 'Re-create',
      printed: 'Printed',
      printed_date: 'Printed date',
      print_description: 'Are you sure you want to print student card(s)?',
      print_recreate_description: 'Following students have active student cards. Are you sure you want to disable current student cards and create new students cards? Please select the students if you are sure to disable and create new ones?',
      connect_student: 'Connect student',
  },
  calendar: {
      title: 'School calendar',
      color: 'Color',
      add_activity: 'Add event',
      no_event: 'There is no event',
      activity: 'Event',
      activity_name: 'Event name',
      start_end_date: 'Start and end date',
      start_end_time: 'Start and end time',
      is_full_day: 'All day?',
      length: 'Duration',
      description: 'Description',
      today: 'Today',
      view_event: 'View',
      start_date: 'Start date',
      end_date: 'End date',
      edit_event: 'Edit',
      month: 'Month',
      week: 'Week',
      day: 'Day',
      list: 'List',
      all_day: 'All day',
      enter_event_name: 'Enter event name',
      enter_start_date: 'Enter start date',
      enter_end_date: 'Enter end date',
      enter_start_time: 'Enter start time',
      enter_end_time: 'Enter end time',
      time_duplicate: 'Start and end time is same',
  },
  parents: {
      confirmed: 'Confirmed',
      total_parents: 'Total parents',
      no_parent: 'Students whose guardians are not registered in the system',
      parent_user_expired: 'Expired',
      parentTotalTime: 'Total parent usage time',
      close_button_label: 'CLOSE',
      user_name: 'User name',
      title: 'Parents',
      settings: 'Parent settings',
      pendingConfirmation: 'Confirmation pending'
  },
  movement: {
      between_success: 'Student transfer has successfully made',
      title: 'Movement',
      out_title: 'Delist',
      entry_date: 'Enrolled date',
      in: 'Enrollment',
      print_register_sheet: 'Print registration sheet',
      register_sheet: 'Registration form',
      register_sheet_description: 'Please print the registration sheet and give one copy to parents and another to financial officers.',
      add_student: 'Add student',
      add_one_student: 'Add',
      add_multiple_students: 'Add multiple',
      add: 'Add students',
      force_movement: 'Student has not paid invoice/sale in the above. If you want to move student with debt, please check this option. Please leave a description about payment.',
      from_school_name: 'From school',
      insert_code: 'Insert code',
      last_name: 'Last name',
      out_action: 'Delist student',
      out_success: 'Student has delisted successfully',
      insert_last_name: 'Insert last name',
      insert_first_name: 'Insert first name',
      insert_register_number: 'Insert registration number',
      birth_date: 'Birth date',
      from_class: 'From',
      to_class: 'To',
      between: 'Internal transfer',
      between_title: 'Internal transfer',
      view: 'View',
      between_new: 'Add',
      select_student: 'Select student',
      transfer: 'Transfer',
      up: 'Moving up',
      up_class: 'To',
      up_class_title: 'To class',
      up_date: 'Created date',
      up_title: 'Next class',
      up_user: 'Created user',
      no_year: 'Next school year is not created',
      no_classes_next_year: 'Classes had not created in next year',
      to_class_title: 'To transfer class',
      qr_1: '1. Please scan the QR and install eParent application',
      qr_2: '2. Insert your information',
      qr_3: '3. Add your child then you can see the information',
  },
  exam: {
      title: 'Exam',
      subject: 'Subject',
      flow_exam: 'Exam',
      season_exam: 'Final grade',
      date: 'Taken date',
      name: 'Exam name',
      create: 'Create exam',
      template_name: 'Template name',
      season: 'Term',
      seasonToPull: 'Term to pull',
      report: 'Report',
      list: 'Exam list',
      students_progress: 'Students progress',
      insert_score: 'Insert score',
      full_score: 'Complete',
      exam_regard: 'Comment',
      ranking: 'Rank',
      score_type: 'Score type',
      max_average: 'Maximum average',
      max_score: 'Maximum score',
      min_average: 'Minimum average',
      min_score: 'Minimum score',
      notFound: 'There is no exam',
      score: 'Grade',
      exam_complete: 'Complete',
      exam_incomplete: 'Incomplete',
      exam_no_score: 'Not done',
      exam_all_student_count_title: 'Ungraded',
      exam_student_count_title: 'Graded',
      calculate_generalization: 'Calculate report',
      calculate_ranking: 'Calculate rank',
      performance_percent: 'Percentage',
      publish_description: 'Please note that it will not possible to edit or delete after published.',
      publish_title: 'Please note that it will not possible to edit or delete after published.',
      publish_title_season: 'Please note that it will not possible to edit or delete after published.',
      publish_title_description: 'Only approved results will be shown to parents and class teacher.',
      insert_exam_template_question: 'Enter question(s)',
      insert_with_percentage: 'Insert score as percentage',
      delete_student_score_title: 'Are you sure you want to delete student’s score?',
      delete_student_score: 'Delete student’s score',
      taken_score: 'Taken score',
      exam_total_score: 'Total score',
      score_empty: 'Insert score, please',
      score_higher_that_max_score: 'score is higher than maximum score',
      score_lower_that_max_score: 'score is lower than maximum score',
      empty_score: 'score is empty, please insert score',
      warning_message: 'If exam score is changed, student score will be re-calculated!!!',
      average_success: 'Average success',
      changePercentage: 'Change percentage',
      changeScore: 'Change score',
      yearType: 'Half year',
      weightEmpty: 'Insert weight for exam',
      weightError: 'Total weight must equals to 100 percent'
  },
  evaluation: {
      title: 'Evaluation'
  },
  absent: {
      attachmentView: 'See attachment',
      title: 'Absent',
      created_user: 'Created by',
      period: 'Period',
      request: 'Absence request',
      select_type: 'Select absence type',
      registration: 'Absence record',
      view: 'View',
      register: 'Register absence',
      request_sender: 'Sender',
      reason: 'Description',
      start_date: 'Start',
      end_date: 'End',
      description: 'Description',
      subject_name: 'Subject',
      user: 'User',
      sick: 'Sick',
      excused: 'Excused',
      excuseSettingUser: 'Acceptance user',
      excuseSettings: 'Excuse settings',
      excuseSettingsCreate: 'Add excuse settings',
      excuseSettingsEdit: 'Edit excuse settings',
      excuseMinDay: 'min day(s)',
      excuseMaxDay: 'max day(s)',
      day: 'Day',
      time: 'Time',
      response: 'Reply',
      decline: 'Decline',
      approve: 'Approve',
      select_class: 'Select class',
      select_student: 'Select student',
      select_subject: 'Select subject',
      select_start_date: 'Select start date',
      select_end_date: 'Select end date',
      select_day: 'Select day',
      select_reason: 'Select term',
      dateError: 'End date must be later than start date',
      notResponded: 'Not responded',
      requestDate: 'Request date',
      respondedUser: 'Responded user',
  },
  exam_template: {
      question_number: 'Question №',
      answer: 'Answer',
      title: 'Exam template',
      select: 'Select exam template',
      code: 'Template code',
      name: 'Template name',
      exam_type: 'Exam type',
      subject: 'Subject',
      created_date: 'Created date',
      created_user: 'Created by',
      disable: 'Disable',
      answer_disable: 'Answer disable',
      view: 'View',
      question: 'Question',
      question_score: 'Question score',
      number: 'Number',
      insert_number: 'Insert number',
      create_question_please: 'Асуулт ',
      total_score: 'Total score',
      only_me: 'Only for me',
      not_only_me: 'All use',
      confirmation: 'Publish',
      task: 'Task',
      score: 'Score',
      insert_score: 'Insert score',
      subject_category: 'Subject category',
      category: 'Category',
      select_category: 'Select category',
      total_question: 'Total questions',
      insert_code: 'Insert code',
      insert_name: 'Insert name',
      choose_template_name: 'Choose template name',
      choose_exam_type: 'Choose exam type',
      select_subject: 'Select subject',
      select_exam_type: 'Select exam type',
      exam_complete: 'Complete',
      exam_incomplete: 'Incomplete',
      exam_no_score: 'Not done'
  },
  omr_exam_template: {
      title: 'Omr exam template',
      file: 'Omr exam file name',
      insert_file: 'Insert file name',
      please_select: 'Please select exam template',
      empty: 'empty',
      subject_group: 'Subject group'
  },
  omr_exam: {
      title: 'Omr exam'
  },
  season_score: {
      calculate: 'Calculate',
      calculated_exam_count: 'Published subject count',
      title: 'Result',
      total_subject_count: 'Total subject count',
      subject_count: 'Subject count',
      report: 'Report',
      list: 'Exam list',
      flow_season_score: 'End of term grades',
      students_progress: 'Students progress',
      student_progress: 'Student\'s progress',
      board: 'Scoreboard',
      board_unpublish_description: 'Would you like to unpublish selected score board?',
      season: 'Term',
      performance: 'Average',
      quality: 'Percentage of above 80%',
      success: 'Percentage of above 60%',
      student_count: 'Number of students',
      published_date: 'Published date',
      method: 'Method',
      total_average: 'Total average',
      subject: 'Subject',
      disable: 'Unpublish',
      view: 'View',
      create_class_board: 'Create',
      published: 'Published term scores',
      publish_description: 'Term score sheet will be unable to edit or delete after publish',
      select_class: 'Select class',
      select_season: 'Select term',
      select_method: 'Select method',
      score_template: 'Score template',
      select_score_template: 'Select score template',
      skill: 'Skill template',
      total_credit: 'Total credit',
      chooseExam: 'Choose exam',
      examChoice: {
          title: 'Улирлын дүнд нөлөөлөх шалгалтуудаа сонгоно уу.',
          description: 'Таны сонгосон үнэлгээний бүтцэд шалгалтын дүн нөлөөлнө гэж тохируулсан байна.',
      },
      skillChoice: {
          title: 'Улирлын дүнд нөлөөлөх үнэлгээ сонгоно уу.',
          description: 'Таны сонгосон үнэлгээний бүтцэд ур чадварын үнэлгээ нөлөөлнө гэж тохируулсан байна.',
      },
      chooseOne: 'Select at least one exam'
  },
  school_settings: {
      attendanceType: 'Attendance type',
      attendanceTypeConfig: 'Attendance config',
      attendanceTypeDescription: 'Attendance type',
      attendanceTypeFullDescription: 'Ирцийн төлөвт оруулсан оноо нь дүн гаргах үед татагдах ирцийн оноонд нөлөөлөхийг анхаарна уу',
      attendanceTypeScore: 'Type score',
      capacity: 'Seat',
      capacity_number: 'Seat number',
      detention: 'Detention',
      relationHasConfirmation: 'Class teacher must approve student relations',
      room_number: 'Room number',
      register_room: 'Add room',
      parent: 'Belong to',
      title: 'School setting',
      group_type: 'Group type',
      year: 'Year',
      previous_year: 'Previous year',
      current_year: 'Current year',
      previous_season: 'Previous season',
      parent_season: 'Parent season',
      parent_year: 'Parent year',
      add_year: 'Add year',
      insert_code: 'Insert code',
      insert_name: 'Insert name',
      is_current_season: 'Is current term',
      is_timetable: 'Used in timetable',
      is_exam: 'Used in exam',
      is_result: 'Used in grade',
      edit_year: 'Edit year',
      delete_season: 'Delete term',
      delete_season_description: 'Term is about to be deleted, Please note that it is not possible to restore the deleted information.',
      group_setting: 'Settings',
      group_type_setting: 'Group type',
      group_type_add: 'Add',
      insert_current_year: 'Select parent year',
      group_type_edit: 'Edit',
      group_setting_add: 'Settings',
      subject_type: 'Subject type',
      insert_subject_type: 'Insert subject type',
      select_group_type: 'Select the setting',
      score_template: 'Score template',
      score_template_edit: 'Edit score template',
      score_template_add: 'Add score template',
      view: 'View',
      is_ranked: 'Calculate the rank',
      requirement: 'Indicators',
      is_editable: 'Is editable',
      weight: 'Weight',
      location: 'School location',
      manager: 'Manager settings',
      master_data: 'Master data',
      maxScore: 'Max score',
      minScore: 'Min score',
      ordering: 'Order',
      score_template_delete_description: 'Are you sure to delete the score template. Please note that once you deleted you cannot undo.',
      score_template_disable_title: 'Are you sure to deactivate the score template?',
      score_template_disable_description: 'Please note that once you deactivated the score template you cannot use it',
      school_shift: 'Schedule',
      delete_school_shift: 'Delete schedule',
      delete_school_shift_description: 'School shift is about to be deleted. Please note that it is not possible to restore the deleted information.',
      add_school_shift: 'Add schedule',
      edit_school_shift: 'Edit schedule',
      school_logo: 'School logo',
      delete_school_logo: 'Delete school logo',
      delete_school_logo_description: 'School logo is about to be deleted. Please note that it is not possible to restore the deleted information.',
      class_type: 'Class type',
      add_class_type: 'Add class type',
      edit_class_type: 'Edit class type',
      delete_class_type: 'Delete class type',
      delete_class_type_description: 'Class type is about to be deleted. Please note that it is not possible to restore the deleted information.',
      bell_schedule: 'Timetable',
      add_bell_schedule: 'Add schedule of bell',
      edit_bell_schedule: 'Edit schedule of bell',
      delete_bell_schedule: 'Delete schedule of bell',
      delete_bell_schedule_description: 'Schedule of bell is about to be deleted. Please note that it is not possible to restore the deleted information.',
      add_score_type: 'Add score type',
      edit_score_type: 'Edit score type',
      delete_score_type: 'Delete score type',
      delete_score_type_description: 'Score type is about to be deleted. Please note that it is not possible to restore the deleted information.',
      add_subject_type: 'Add subject type',
      edit_subject_type: 'Edit subject type',
      delete_subject_type: 'Delete subject type',
      delete_subject_type_description: 'Subject type is about to be deleted. Please note that it is not possible to restore the deleted information.',
      add_exam_type: 'Add exam type',
      edit_exam_type: 'Edit exam type',
      delete_exam_type: 'Delete exam type',
      delete_exam_type_description: 'Exam type is about to be deleted. Please note that it is not possible to restore the deleted information.',
      short_name: 'Short name',
      long_name: 'Long name',
      add_class_grade: 'Add class grade',
      edit_class_grade: 'Edit class grade',
      edit_class: 'Edit class',
      add_class: 'Add class',
      select_prev_season_class: 'Please select previous term class',
      prev_season_class: 'Previous term class',
      current_class: 'Current class',
      select_current_class: 'Please select current class',
      delete_class: 'Delete class',
      delete_class_description: 'Class is about to be deleted. Please note that it is not possible to restore the deleted information.',
      is_class: 'All students will be participate',
      include_exam_type: 'Include to exam type',
      abbreviation: 'Abbreviation',
      view_score_type: 'View score type',
      min_score_short: 'Min',
      max_score_short: 'Max',
      is_club: 'Дугуйлан эсэх',
      logout_to_see_difference: 'Saved successfully change will be shown after you sign in again.'
  },
  topic: {
      current_topic: 'Related topic',
      topic: 'Topic'
  },
  foodIncomes: {
      income: 'Income',
      cash: 'Cash',
      current: 'Bank statement',
      view: 'View',
      receipt_number: 'Receipt number',
      undo: 'Undo',
      undo_description: 'Are you sure to undo the payment?',
      create_cash: 'Create cash',
      create_current: 'Bank account',
      amount: 'Amount',
  },
  students_progress: {
      title: 'Students’ progress',
      exam_progress: 'Exam progress',
      behavior: 'Behavioral assessment',
      result: 'Term result',
      increased_in_level: 'Up in level',
      increased_over_level: 'Level up',
      increased_subjects: 'Subjects-level-up',
      decreased_subjects: 'Subjects-level-down',
      decreased_in_level: 'Down in level',
      decreased_over_level: 'Level down',
      season_scoreboard: 'Seasonal scoreboard',
      students_list: 'Students\' list',
      total: 'Total',
  },
  err: {
      relation_confirm_empty: 'Select user to approve confirmation',
      select_class: 'Select class',
      select_detention: 'Select detention type',
      select_season: 'Select season',
      select_student: 'Select student',
      select_invoice: 'Select invoice',
      select_date: 'Please, select date',
      select_time: 'Select time, please',
      select_type: 'Select type',
      select_room: 'Select room',
      select_curriculum: 'Select curriculum',
      insert_amount: 'Insert amount',
      insert_score: 'Insert score',
      student_code_empty: 'Student code empty',
      select_requirement: 'Select the indicators',
      select_exam_type: 'Select exam type',
      select_score_type: 'Select score type',
      code_duplicate: 'Code is duplicated',
      order_duplicate: 'Order is duplicated',
      image_size_error: 'The image is too large to upload and needs to be resize please. Image max size 1mb.',
      image_type_error: 'Uploaded file is not a valid image. Only JPG, PNG and GIF files are allowed.',
      image_type_error_1: 'Insert only document file. If you want to upload image, please click on insert image',
      fill_all_fields: 'Please complete fields',
      delete_info_not_found: 'Not data was found',
      edit_info_not_found: 'No data found for editing',
      select_group: 'Select group',
      select_exam: 'Select exam',
      select_template: 'Select template',
      insert_grade_name: 'Enter class name',
      select_teacher: 'Select teacher',
      select_school_shift: 'Select schedule',
      enter_email: 'Enter E-Mail',
      select_school: 'Select school',
      enter_existing_phone_number: 'Please insert the mobile number now using',
      enter_new_phone_number: 'Insert the new mobile number',
      error_occurred: 'Error occurred',
      enter_valid_date: 'Enter valid date',
      select_role: 'Select role',
      invalid_image_format: 'Invalid image format',
      invoice_amount: 'Invoice amount can\'t be 0',
      enter_password: 'Enter password',
      re_enter_password: 'Reenter password',
      info_not_found: 'No information is found',
      file_size: 'The file size is too large to upload',
      file_type: 'Invalid file type',
      file_empty: 'The file is empty',
      choose_date: 'Please choose date',
      invalid_email: 'E-mail is invalid',
  },
  my: {
      homework_report: 'Homework reports',
      online_lesson: 'Online lesson',
      online_lesson_report: 'Online lesson reports',
      link: 'Link',
      link_name: 'Link name',
      google_driver: 'GoogleDrive',
      upload_file: 'File upload',
      upload_video: 'Video upload',
      video: 'Video',
      description_text: 'Depending on the size of the video, uploading the file to the server may take some time to complete. Click on the online lesson to make sure the file is completely uploaded.',
      attention: 'Attention',
      in_progress: 'In progress ...',
      sent_file: 'Sent file',
      sent_date: 'Sent date',
      checked_date: 'Checked date'
  },
  newsfeed: {
      title: 'Newsfeed',
      title_error: 'Type text on newsfeed',
      file_size_warning: 'Please note that the file size should not exceed 50MB.',
      image_count_error: '',
      likes: 'Likes',
      views: 'Views',
      comments: 'Comments',
      see_more: 'See more',
      reply: 'Reply',
      reply_comment: 'Reply comment',
      reply_view: 'Reply view',
      post_reply: 'Reply post',
      show_more_comment: 'More comments',
      show_more_reply: 'More reply',
      post_edit: 'Edit post',
      post_delete: 'Delete post',
      config: 'Newsfeed setting'
  },
  newsfeedConfig: {
      addRecipient: 'Add recipient',
      canSeeAllPost: 'Can see all posts',
      canSeeOwnPost: 'Only can see own posts',
      fromSchool: 'From school',
      parents: 'Parents',
      students: 'Students',
      hdrName: 'Name',
      parent_hdr: 'Parent board',
      parent_hdr_type: 'Board type',
      hdr_roles: 'User roles who can post',
      insertNameError: 'Insert board name, please',
      insertHdrTypeError: 'Select board type, please',
      insertParentHdrError: 'Select parent board, please',
      insertRolesError: 'Select roles who can post in board, please',
      removeHdr: 'Would you like to remove board?',
      removeRecipient: 'Would you like to remove user from board?',
      removeRecipientDescription: 'User also will be removed from school config, if user works at school.',
      selectHdrRecipient: 'Please, select newsfeed recipient',
      title: 'Newsfeed config'
  },
  corporate: {
      title: 'Statement',
      show: 'Download statement',
      qpos: 'QPOS',
      cgw: 'CGW',
      not_connect: 'Not connected',
      description: 'Transaction description',
      sent_account: 'Transferred account',
  },
  course: {
      subject: 'Subject',
      subjectCode: 'Subject code',
      subjectName: 'Subject name',
  },
  student_email: {
      title: 'Students\' E-Mail',
      duplicate_error_title: 'Following email addresses are duplicated',
      invalid_error_title: 'Following email addresses are invalid',
  },
  studentTranscript: {
      moveOutTitle: 'Шилжсэн сурагчийн тодорхойлолт',
      title: 'Student transcript',
      issuedUser: 'Printed user',
      seasons: 'Select the years for transcript:',
      publishedLabel: 'Print only published results'
  },
  health: {
      record: {
          title: 'Health Record',
          warning_student_health_add: 'You haven`t filled all the fields. If you wish to save it as empty please press save button again',
          warning_class_change: 'You are changing a class of this template. It will result in deleting of every student information it has.',
          keep_going: 'If you like to continue click on the insert button',
          record_date: 'Record date'
      },
      template: {
          title: 'Health template',
          item: 'Health indicators',
          template_name: 'Template name',
          item_can_be_chosen_once: 'Indicators has already been chosen',
          add_item: 'Add indicators',
          duplicate_error: 'Order can not be duplicate'
      },
      report: {
          title: 'Health report',
          choose_template: 'Please choose a template'
      }
  },
  userGroup: {
      title: 'User group'
  },
  profile: {
      title: 'My profile',
      about: 'About me',
      no_info: 'Information haven`t been inserted',
      info_delete: 'Information delete',
      img_delete: 'Image delete',
      insert_photo: 'Insert photo',
      delete_photo_not_found: 'Устгах зураг олдсонгүй',
      old_password: 'Old password',
      new_password: 'New password',
      new_password_repeat: 'Confirm password',
      old_password_err: 'Old password and new password must be diffrent'
  },
  skill: {
      name: 'Skill',
      title: 'Skills assessment',
      assessmentTemplate: 'Assessment template',
      createdTeacher: 'Created teacher',
      skillAssessmentTemplate: 'Skills assessment template',
      criteria: 'Criteria',
      chooseAllSubject: 'Choose all subject',
      addCriteria: 'Add criteria',
      editCriteria: 'Edit criteria',
      criteriaType: 'Criteria type',
      readd: 'Readd',
      hasScore: 'Has score',
      hasNotValue: 'Has no value',
      hasValue: 'Has value',
      optionValues: 'Option values',
      numericalAnswer: 'Numerical answer',
      checkboxAnswer: 'Checkbox answer',
      publish: 'Would you like to publish skill result?',
      radioAnswer: 'Radio answer',
      textareaAnswer: 'TextArea answer',
      addAssessment: 'Add assessment',
      selectTemplate: 'Select template',
      assessmentList: 'Assessment list',
      createNewAssessment: 'Create new assessment',
      notFound: 'Skill not found',
  },
  cardOrder: {
      title: 'Card order',
      delivered: 'Delivered',
      ordered: 'Ordered',
      order: 'Order',
      cancel: 'Cancel',
      date: 'Order date',
      date_delivered: 'Delivered date',
      order_student_card: 'Student card order',
      warning: 'Please keep in mind that students without photo will not appear in the list. If the card is lost student`s parent have to order through the App. This section is for those who are ordering for the first time.',
      err_student: 'Please select student',
      canceled_date: 'Canceled date',
      canceled: 'Canceled',
      recover: 'Recover',
      teacher_card_warning: 'Please keep in mind that users without photo will not appear in the list.'
  },
  club: {
      students: 'Club students',
      title: 'Club',
      register_student: 'Student register',
      name: 'Club name',
      no_info: 'Club information has not been found',
      duplicateClasses: 'Classes are duplicated',
  },
  dashboard_info: {
      title: 'Information exchange dashboard',
      class_info_exchange: 'Class information exchange participation',
      parent_info_exchange: 'Parent/Guardian information exchange participation',
      teacher_info_exchange: 'Teacher information exchange participation',
      parent_num: 'Parent count',
      post_num: 'Post count',
      comment_num: 'Comment count',
      activity: 'Activity',
      comment: 'Comment',
      post: 'Post',
      class_teacher_short: 'CT',
      answer: 'Answer',
      see_all: 'See all',
      your_class: 'Class',
      others_class: 'Other classes',
      today_attendance: 'Today attendance',
  },
  evaluation_final: {
      subject_grade: 'Subject grades',
      sent: 'Sent',
      name: 'Final grade',
      not_sent: 'Not sent',
      not_published: 'Not published',
      send_esis: 'Send to ESIS',
      sent_esis: 'Sent to ESIS',
      title: 'Year final score list',
      unpub_title: 'Final score information',
      delete_title: 'Final grade delete',
      final_grades: 'Final grades',
      excel_template: 'Template for excel file',
      calculated: 'Calculated',
      wrote: 'Wrote',
      not_created: 'Not created',
      score_exists: 'Score has already been inserted',
      publish_confirmation: 'Please note that it will not possible to edit or delete after published!',
      publish_confirmation_description: 'Only approved results will be shown to parents and class teacher.',
  },
  bus_dashboard: {
      student_title: 'Students with sale quantity that haven`t used or registered'
  },
  invoice_form: {
      invoice_from: 'Invoice from',
      bill_to: 'Bill to',
      address: 'Address',
      contact: 'Phone',
      bank: 'Bank',
      bank_account: 'Bank account',
      state_registration_number: 'State registration number',
      invoice_date: 'Invoice date',
      due_date: 'Due date',
      ceo: 'CEO',
      accountant: 'Accountant',
      quantity: 'Quantity',
      unit_price: 'Unit price',
      total_amount: 'Total amount',
      amount: 'Amount',
      vat: 'VAT',
      description: 'Description',
      employee_card: 'Employee card',
      nomch_address: '',
      nomch: 'Digital Edu Management LLC',
      account_number: '413017498',
      tdb: 'Trade development bank',
      invoice_pdf: 'Invoice',
      parent_contact: 'Parent contact',
      invoice_timetable: 'Payment timetable',
      total_unpaid: 'Remaining total',
      billed_amount: 'Billed amount',
      total_discount: 'Total discount',
      discounts: 'Discounts',
      parent_signature: 'Parent/Guardian signature'
  },
  analysis: {
      title: 'Analysis',
      list: 'Analysis list',
      related_exam: 'Related exam',
      calculate: 'Analyse',
  },
  esis: {
      attendance_daily: 'Daily attendance',
      attendance_daily_empty_class: 'Please, select class to send attendance information to ESIS',
      attendance_daily_send: 'Send daily attendance',
      class_id: 'Esis studentGroupId',
      last_name: 'esis Last name',
      first_name: 'esis First name',
      birth_date: 'esis Birth date',
      excel_file: 'Excel file',
      excel_filesize_exceed: 'Excel file size must not greater than 5mb.',
      elementCredit: 'Element credit hour',
      company_code: 'Organization id',
      academic_grade: 'Academic level',
      academic_grade_code: 'Academic grade code',
      academic_grade_name: 'Academic grade name',
      academic_level_code: 'Academic level code',
      academic_level_name: 'Academic level name',
      curriculum_and_plan: 'Curriculum, plan',
      curricula: 'Curricula',
      curricula_connect: 'Connect curricula',
      curriculaLevel: 'Curricula level',
      curriculaPlan: 'Curricula plan',
      curriculaSubject: 'Curricula subject',
      curricula_code: 'Curricula code',
      curricula_name: 'Curricula name',
      curricula_grade_code: 'Curricula grade code',
      curricula_grade_name: 'Curricula grade name',
      curricula_element_code: 'Curricula element code',
      curricula_plan_name: 'Curricula plan name',
      curricula_plan_type: 'Curricula plan type',
      curricula_plan_type_name: 'Curricula plan type name',
      curricula_plan_grade_code: 'Curricula plan grade code',
      curricula_plan_grade_name: 'Curricula plan grade name',
      class_code: 'Group code',
      class_name: 'Group name',
      student_connection_remove: 'Student connection delete',
      get: 'Show',
      get_time: 'Show logs',
      title: 'ESIS',
      createClass: 'Create class',
      createStudent: 'Create student',
      createTeacher: 'Create teacher',
      createUser: 'Create user',
      shortName: 'Short name',
      eschoolCode: 'eSchool Code',
      eschoolLastName: 'eSchool last name',
      eschoolFirstName: 'eSchool first name',
      eschoolClassName: 'eSchool class name',
      eschoolTitle: 'eSchool title',
      linkTeacherStaff: 'Link teacher, staff',
      selectTeacherStaff: 'Select teacher, staff!',
      selectGrade: 'Select grade!',
      selectStudent: 'Select student!',
      selectOnlyOneTeacherStaff: 'Select only one teacher, staff!',
      selectOnlyOneGrade: 'Select only one grade!',
      selectOnlyOneStudent: 'Select only one student!',
      sentDate: 'Sent date',
      sentStudentCount: 'Number of student in report',
      sentUser: 'Sent user',
      studyTypeCode: 'Study type code',
      studyTypeName: 'Study type name',
      scoreSchemaCode: 'Score schema code',
      scoreSchemaName: 'Score schema name',
      gradeName: 'Grade name',
      eschoolGrade: 'eSchool grade',
      eschoolClass: 'eSchool class',
      editClass: 'Edit class information',
      classCode: 'Class code',
      className: 'Class name',
      classTeacher: 'Class teacher',
      linkClass: 'Link class',
      notSent: 'Not sent',
      syncStudents: 'Synchronize student information',
      weekPerTime: 'Weekly hour',
  },
  common: {
      day: 'd',
      hour: 'h',
      min: 'min'
  },
  handToHand: {
      classClockOut: 'Class clock out',
      dismiss: 'Dismiss',
      nonRepliedStudentCount: 'Тараагүй сурагчид',
      title: 'Hand to hand',
      report: 'Report',
      requestDate: 'Requested date',
      requestRelationType: 'Student relation type',
      requestUser: 'Requested user',
      reply: 'Reply',
      replyEmpty: 'Please select student',
      repliedStudentCount: 'Тарсан сурагчид',
  },
  timeRecord: {
      beforeMinute: 'Early minute',
      cameTime: 'Check-in time',
      lateHours: 'Late hour',
      lateMinute: 'Late minute',
      outTime: 'Check-in time for departure',
      overHours: 'Overtime',
      overMinute: 'Over minute',
      settings: 'Timekeeping setting',
      shift: 'Shift',
      shiftEmpty: 'Select shift',
      title: 'Time record',
      totalWorkHour: 'Total hours to work',
      totalWorkedHour: 'Total hours worked'
  },
  faq: 'Manual',
  scoreSchema: 'Score',
  manager: {
      detention: 'Detention',
      title: 'Manager',
      classGroups: 'Сурагчдын хамрагдалт',
      curriculum: 'Сургалтын төлөвлөгөө',
      curriculum_weekly_count: 'Долоо хоногт хэдэн удаа орох',
      curriculum_weekly_count_description: 'Долоо хоногт хэдэн удаа орохыг оруулна',
      teacher_progress: 'Багш нарын явц',
      noGroupTitle: 'Хичээлд хамрагдахгүй байгаа',
      season_week_count: 'Хичээллэх долоо хоног',
      year_structure: 'Жилийн бүтэц'
  },
  page: {
      notFound: 'Page not found!',
      Forbidden: 'You are not allowed to access this page!',
      goHome: 'Back to homepage',
  },
  dashboard: {
      attendance: 'Attendance dashboard',
      attendanceTypes: {
          byTime: 'By time',
          byClass: 'By class',
          byTeacher: 'By teacher'
      },
      title: 'Dashboard',
      parents_access: 'Parents access',
      exam_today: 'Today\'s exam info',
      parents_and_guardians: 'Parents',
      parents_and_guardian: 'Parents',
      accessed_parents: 'Students whose parents are using app',
      parents_count: 'Number of parents',
      see_all_events: 'See all events',
      see_all_news: 'See all news',
      announcement_today: 'Announcements entered today',
      homework_today: 'Today\'s homework report',
      homework_total: 'Today\'s homework',
      homework_check: 'Homework to check today',
      newsfeed_today: 'Events for today',
      class_teacher: 'Class teacher',
      teacher_journal: 'Teacher journal',
      usage: {
          title:  'Usage',
          staffs: 'Most active teacher, staffs',
          parents: 'Most active parents',
          by_parent: 'By parents',
          by_staff: 'By staffs',
          eTeacher: 'Mobile',
          totalUsed: 'Total used'
      }
  },
  staff: {
      title: 'Employee',
      code: 'Employee code',
      lastName: 'Last name',
      firstName: 'First name',
      select: 'Select employee!',
  },
  teacherToday: {
      behavior: 'Behavior',
      notification: 'Notification',
      noNotification: 'There is no notification',
      regular: 'Topic',
      hw_assigned: 'Homework assigned',
      hw_reviewed: 'Homework to check',
      hw_assign: 'assign homework',
      hw_review: 'check homework',
      active: 'Active',
  },
  idle: {
      title: 'Are you using?',
      description: 'You are being not used for more than 10 minutes so you are being logged out. Please click on continue button if you want to use!',
      continue: 'Continue',
  },
  sheetImport: {
      regex: {
          date: 'Please type date as Year-month-day!',
          latinAndCyrillic: 'Please use cyrillic or latin!',
          regNumber: 'Please type as АБ01234567!',
          email: 'Please type as example@example.com!',
      },
      required: {
          enrolDate: 'Enroll date can not be empty!',
          studentLastName: 'Last name can not be empty!',
          studentFirstName: 'First name can not be empty!',
          gender: 'Gender can not be empty!',
          studentCode: 'Student code can not be empty!',
          grade: 'Class can not be empty!',
          username: 'Login name can not be empty!',
      },
      unique: {
          regNumber: 'National ID can not be same!',
          studentCode: 'Student code can not be same!',
          username: 'Login name can not be same!',
      },
      desc: {
          gender: 'You have to select male or female!',
          notRequired: 'Not required',
          studentPassword: 'If you provide no password student code will be then treated as a password',
      },
      uploadStep: {
          title: 'Choose file',
          manifestTitle: 'File format',
          manifestDescription: null,
          dropzone: {
              title: "File must be .xlsx, .xls or .csv",
              errorToastDescription: "Importing file is cancelled",
              activeDropzoneTitle: "Drop here",
              buttonTitle: "Choose file",
              loadingTitle: "Loading...",
          },
          selectSheet: {
              title: "Please select one page because there is more than one pages and then click continue button",
              nextButtonTitle: "Continue",
          },
      },
      selectHeaderStep: {
          title: "Select the header row",
          nextButtonTitle: "Continue",
      },
      matchColumnsStep: {
          title: "Connect columns",
          nextButtonTitle: "Continue",
          userTableTitle: "Your file",
          templateTitle: "Columns for connecting",
          selectPlaceholder: "select columns...",
          ignoredColumnText: "columns deleted",
          subSelectPlaceholder: "Select...",
          matchDropdownTitle: "Connect",
          unmatched: "not connected",
          duplicateColumnWarningTitle: "Column is selected",
          duplicateColumnWarningDescription: "Columns can not be same",
      },
      validationStep: {
          title: "Checking data",
          nextButtonTitle: "Import",
          noRowsMessage: "No data found",
          noRowsMessageWhenFiltered: "There is no invalid data",
          discardButtonTitle: "Delete the selected rows",
          filterSwitchTitle: "Show the invalid data",
      },
      alerts: {
          confirmClose: {
              headerTitle: "Close",
              bodyText: "Are you sure to close? Please note that date will not be saved!",
              cancelButtonTitle: "Cancel",
              exitButtonTitle: "Close",
          },
          submitIncomplete: {
              headerTitle: "There is invalid data",
              bodyText: "Please note that invalid data can not imported because there are rows with invalid data.",
              bodyTextSubmitForbidden: "Please check your data because there are invalid data",
              cancelButtonTitle: "Cancel",
              finishButtonTitle: "Import",
          },
          unmatchedRequiredFields: {
              headerTitle: "There are columns that are not connected",
              bodyText: "Required columns are not connected completely",
              listTitle: "Required columns:",
              cancelButtonTitle: "Cancel",
              continueButtonTitle: "Continue",
          },
          toast: {
              error: "Error",
          },
      },
      error: {
          studentNotExists1: 'class has no student with code:',
          studentNotExists2: '',
      },
  },
  logout: 'Logout',
  hr: {
      title: 'Human resource',
      teachersAttendance: 'Teacher\'s attendance',
      attendanceReport: 'Attendance report',
      configStaffs: 'Belonging staffs',
      configDeleteTitle: 'Would you like to delete?',
      department: 'Department',
      addStaff: 'Add staff',
      staffCode: 'Staff code',
      structure: 'Structure',
      addDepartment: 'Add department',
      editDepartment: 'Edit department',
      parentDepartment: 'Belonging department',
      departmentName: 'Department name',
      departmentCode: 'Department code',
      addEmployee: 'Add employee',
      noConfigStaffs: 'Employees that not assigned for config',
      noDepartment: 'Employees not assigned to a department',
      approved: 'Approved',
      declined: 'Declined',
      role: 'Role'
  },
  behavior: {
      title: 'Behavior',
      positiveScore: '+ score',
      negativeScore: '- score',
      maturity: 'Behavior maturity'
  },
  subMenu: {
      survey: 'Survey',
      doctor: 'Doctor',
      appointment: 'Appointment',
      erp: 'ERP'
  }
};
